name: CI

on:
  # Triggers the workflow on push or pull request events for the main branch
  push:
    branches:
      - main
      - juthika/health_setup-gh-actions
  pull_request:
    branches:
      - main
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB_DEV: ${{ secrets.POSTGRES_DB_DEV }}
      POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_TEST }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      # FLASK_CONFIG: ${{ secrets.FLASK_CONFIG }}
      # FLASK_APP: ${{ secrets.FLASK_APP }}
      # Firebase secrets
      # FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}
      # FIREBASE_REQUEST_URI: ${{ secrets.FIREBASE_REQUEST_URI }}
      # These values are found in the downloaded service account file
      # FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      # FIREBASE_SVC_ACCOUNT_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_SVC_ACCOUNT_PRIVATE_KEY_ID }}
      FIREBASE_SVC_ACCOUNT_PRIVATE_KEY: "42142"
      # FIREBASE_SVC_ACCOUNT_CLIENT_EMAIL: ${{ secrets.FIREBASE_SVC_ACCOUNT_CLIENT_EMAIL }}
      # FIREBASE_SVC_ACCOUNT_CLIENT_ID: ${{ secrets.FIREBASE_SVC_ACCOUNT_CLIENT_ID }}
      # FIREBASE_SVC_ACCOUNT_AUTH_URI: ${{ secrets.FIREBASE_SVC_ACCOUNT_AUTH_URI }}
      # FIREBASE_SVC_ACCOUNT_TOKEN_URI: ${{ secrets.FIREBASE_SVC_ACCOUNT_TOKEN_URI }}
      # FIREBASE_SVC_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_SVC_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL }}
      # FIREBASE_SVC_ACCOUNT_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_SVC_ACCOUNT_CLIENT_X509_CERT_URL }}
      # FIREBASE_STORAGE_DEFAULT_BUCKET: ${{ secrets.FIREBASE_STORAGE_DEFAULT_BUCKET }}

      # MAILER_USER: ${{ secrets.MAILER_USER }}
      # MAILER_REFRESH_TOKEN: ${{ secrets.MAILER_REFRESH_TOKEN }}
      # MAILER_CLIENT_SECRET: ${{ secrets.MAILER_CLIENT_SECRET }}
      # MAILER_CLIENT_ID: ${{ secrets.MAILER_CLIENT_ID }}

    steps:
      - uses: actions/checkout@v2
      
      # installing dependencies
      - name: Install dependencies
        run: yarn --cwd ./frontend/ && yarn --cwd ./backend/python/
      
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.ci.yml up --abort-on-container-exit
      
      - name: Check running containers
        run: docker ps -a
      
      # running tests
      - name: Run tests for frontend
        working-directory: ./frontend
        run: yarn test
      
      - name: Run tests for backend
        run: docker exec cas_py_backend ./run-test.sh
        # run: docker-compose -f docker-compose.ci.yml run --entrypoint ./run-test.sh python-backend
        # run: docker-compose -f docker-compose.ci.yml run --entrypoint ./run-test.sh python-backend