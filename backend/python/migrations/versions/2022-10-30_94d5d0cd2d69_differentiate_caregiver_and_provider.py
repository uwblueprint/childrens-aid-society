"""differentiate caregiver and provider

Revision ID: 94d5d0cd2d69
Revises: 7343e3f6ce2b
Create Date: 2022-10-30 22:34:24.739232

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "94d5d0cd2d69"
down_revision = "7343e3f6ce2b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "other_permitted_individuals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("relationship_to_child", sa.String(), nullable=False),
        sa.Column("notes", sa.String(), nullable=False),
        sa.Column("intake_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["intake_id"],
            ["intakes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "providers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("file_number", sa.String(), nullable=False),
        sa.Column("primary_phone_number", sa.String(), nullable=False),
        sa.Column("secondary_phone_number", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("relationship_to_child", sa.String(), nullable=False),
        sa.Column("additional_contact_notes", sa.String(), nullable=True),
        sa.Column("child_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"],
            ["children.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "caregivers", sa.Column("additional_contact_notes", sa.String(), nullable=True)
    )
    op.add_column("caregivers", sa.Column("address", sa.String(), nullable=False))
    op.add_column("caregivers", sa.Column("email", sa.String(), nullable=False))
    op.add_column(
        "caregivers", sa.Column("individual_considerations", sa.String(), nullable=True)
    )
    op.add_column("caregivers", sa.Column("intake_id", sa.Integer(), nullable=False))
    op.add_column("caregivers", sa.Column("name", sa.String(), nullable=False))
    op.add_column(
        "caregivers", sa.Column("primary_phone_number", sa.String(), nullable=False)
    )
    op.add_column(
        "caregivers", sa.Column("secondary_phone_number", sa.String(), nullable=True)
    )
    op.alter_column(
        "caregivers", "date_of_birth", existing_type=sa.DATE(), nullable=False
    )
    op.drop_constraint("caregivers_address_id_fkey", "caregivers", type_="foreignkey")
    op.drop_constraint("caregivers_child_id_fkey", "caregivers", type_="foreignkey")
    op.create_foreign_key(None, "caregivers", "intakes", ["intake_id"], ["id"])
    op.drop_column("caregivers", "foster_care_coord_name")
    op.drop_column("caregivers", "cpin_number")
    op.drop_column("caregivers", "child_id")
    op.drop_column("caregivers", "kinship_worker_ext")
    op.drop_column("caregivers", "special_needs")
    op.drop_column("caregivers", "type")
    op.drop_column("caregivers", "last_name")
    op.drop_column("caregivers", "phone_number")
    op.drop_column("caregivers", "kinship_worker_name")
    op.drop_column("caregivers", "first_name")
    op.drop_column("caregivers", "name_of_child")
    op.drop_column("caregivers", "limitations_for_access")
    op.drop_column("caregivers", "address_id")
    op.drop_column("caregivers", "is_primary")
    op.drop_column("caregivers", "foster_care_coord_ext")
    op.add_column(
        "daytime_contacts",
        sa.Column("contact_information", sa.String(), nullable=False),
    )
    op.add_column(
        "daytime_contacts", sa.Column("dismissal_time", sa.String(), nullable=True)
    )
    op.add_column("daytime_contacts", sa.Column("name", sa.String(), nullable=False))
    op.drop_column("daytime_contacts", "contact_last_name")
    op.drop_column("daytime_contacts", "contact_first_name")
    op.drop_column("daytime_contacts", "type")
    op.drop_column("daytime_contacts", "phone_number")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "daytime_contacts",
        sa.Column("phone_number", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "daytime_contacts",
        sa.Column(
            "type",
            postgresql.ENUM("SCHOOL", "DAYCARE", name="daytime_contacts_type"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "daytime_contacts",
        sa.Column(
            "contact_first_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "daytime_contacts",
        sa.Column(
            "contact_last_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("daytime_contacts", "name")
    op.drop_column("daytime_contacts", "dismissal_time")
    op.drop_column("daytime_contacts", "contact_information")
    op.add_column(
        "caregivers",
        sa.Column(
            "foster_care_coord_ext", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "caregivers",
        sa.Column("is_primary", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "caregivers",
        sa.Column("address_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "caregivers",
        sa.Column(
            "limitations_for_access", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "caregivers",
        sa.Column("name_of_child", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "caregivers",
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "caregivers",
        sa.Column(
            "kinship_worker_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "caregivers",
        sa.Column("phone_number", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "caregivers",
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "caregivers",
        sa.Column(
            "type",
            postgresql.ENUM("CAREGIVER", "PROVIDER", name="caregivers_type"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "caregivers",
        sa.Column("special_needs", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "caregivers",
        sa.Column(
            "kinship_worker_ext", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "caregivers",
        sa.Column("child_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "caregivers",
        sa.Column("cpin_number", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "caregivers",
        sa.Column(
            "foster_care_coord_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "caregivers", type_="foreignkey")
    op.create_foreign_key(
        "caregivers_child_id_fkey", "caregivers", "children", ["child_id"], ["id"]
    )
    op.create_foreign_key(
        "caregivers_address_id_fkey", "caregivers", "addresses", ["address_id"], ["id"]
    )
    op.alter_column(
        "caregivers", "date_of_birth", existing_type=sa.DATE(), nullable=True
    )
    op.drop_column("caregivers", "secondary_phone_number")
    op.drop_column("caregivers", "primary_phone_number")
    op.drop_column("caregivers", "name")
    op.drop_column("caregivers", "intake_id")
    op.drop_column("caregivers", "individual_considerations")
    op.drop_column("caregivers", "email")
    op.drop_column("caregivers", "address")
    op.drop_column("caregivers", "additional_contact_notes")
    op.drop_table("providers")
    op.drop_table("other_permitted_individuals")
    # ### end Alembic commands ###
