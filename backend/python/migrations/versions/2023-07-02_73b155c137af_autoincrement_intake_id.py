"""autoincrement intake id

Revision ID: 73b155c137af
Revises: 9674564fde8d
Create Date: 2023-07-02 16:59:48.480850

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "73b155c137af"
down_revision = "9674564fde8d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("caregivers_intake_id_fkey", "caregivers", type_="foreignkey")
    op.create_foreign_key(
        None, "caregivers", "intakes", ["intake_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "intakes_concerns_intake_id_fkey", "intakes_concerns", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "intakes_concerns", "intakes", ["intake_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "intakes_goals_intake_id_fkey", "intakes_goals", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "intakes_goals", "intakes", ["intake_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "other_permitted_individuals_intake_id_fkey",
        "other_permitted_individuals",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "other_permitted_individuals",
        "intakes",
        ["intake_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "other_permitted_individuals", type_="foreignkey")
    op.create_foreign_key(
        "other_permitted_individuals_intake_id_fkey",
        "other_permitted_individuals",
        "intakes",
        ["intake_id"],
        ["id"],
    )
    op.drop_constraint(None, "intakes_goals", type_="foreignkey")
    op.create_foreign_key(
        "intakes_goals_intake_id_fkey",
        "intakes_goals",
        "intakes",
        ["intake_id"],
        ["id"],
    )
    op.drop_constraint(None, "intakes_concerns", type_="foreignkey")
    op.create_foreign_key(
        "intakes_concerns_intake_id_fkey",
        "intakes_concerns",
        "intakes",
        ["intake_id"],
        ["id"],
    )
    op.drop_constraint(None, "caregivers", type_="foreignkey")
    op.create_foreign_key(
        "caregivers_intake_id_fkey", "caregivers", "intakes", ["intake_id"], ["id"]
    )
    # ### end Alembic commands ###
