"""add relationship_to_child enum values

Revision ID: db7c2f31d3ea
Revises: 2e3a95429cdf
Create Date: 2023-10-31 11:43:49.965500

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "db7c2f31d3ea"
down_revision = "2e3a95429cdf"
branch_labels = None
depends_on = None

# Enum 'type' for PostgreSQL
enum_name = "caregivers_relationship_to_child"
# Set temporary enum 'type' for PostgreSQL
tmp_enum_name = "tmp_" + enum_name

# Options for Enum
old_options = ("FOSTER_CAREGIVER", "KINSHIP_CAREGIVER", "BIOLOGICAL_FAMILY")
new_options = sorted(
    old_options
    + (
        "ADOPTIVE_PARENT",
        "FOSTER_PARENT",
        "BIOLOGICAL_PARENT",
        "STEP_PARENT",
        "MATERNAL_GRANDPARENT",
        "PATERNAL_GRANDPARENT",
        "SIBLING",
        "STEP_SIBLING",
        "HALF_SIBLING",
        "UNCLE/AUNT",
        "OTHER_RELATIVE",
        "OTHER",
    )
)

# Create enum fields
old_type = sa.Enum(*old_options, name=enum_name)
new_type = sa.Enum(*new_options, name=enum_name)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename current enum type to tmp_
    op.execute("ALTER TYPE " + enum_name + " RENAME TO " + tmp_enum_name)
    # Create new enum type in db
    new_type.create(op.get_bind())
    # Update column to use new enum type
    op.execute(
        "ALTER TABLE caregivers ALTER COLUMN relationship_to_child TYPE "
        + enum_name
        + " USING relationship_to_child::text::"
        + enum_name
    )
    # Drop old enum type
    op.execute("DROP TYPE " + tmp_enum_name)

    op.alter_column("caregivers", "email", existing_type=sa.String(), nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename enum type to tmp_
    op.execute("ALTER TYPE " + enum_name + " RENAME TO " + tmp_enum_name)
    # Create enum type using old values
    old_type.create(op.get_bind())
    # Set enum type as type for event_type column
    op.execute(
        "ALTER TABLE caregivers ALTER COLUMN relationship_to_child TYPE "
        + enum_name
        + " USING relationship_to_child::text::"
        + enum_name
    )
    # Drop temp enum type
    op.execute("DROP TYPE " + tmp_enum_name)

    op.alter_column("caregivers", "email", existing_type=sa.String(), nullable=False)
    # ### end Alembic commands ###
