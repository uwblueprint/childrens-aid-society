"""Update attendance model

Revision ID: 3e662738f1d0
Revises: ba551533e51d
Create Date: 2023-11-14 03:05:15.749101

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "3e662738f1d0"
down_revision = "ba551533e51d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("access_type", sa.String(), nullable=False),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attendance_sheets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("intake_id", sa.Integer(), nullable=True),
        sa.Column("family_name", sa.String(), nullable=False),
        sa.Column(
            "month",
            sa.Enum(
                "JANUARY",
                "FEBRUARY",
                "MARCH",
                "APRIL",
                "MAY",
                "JUNE",
                "JULY",
                "AUGUST",
                "SEPTEMBER",
                "OCTOBER",
                "NOVEMBER",
                "DECEMBER",
                name="month",
            ),
            nullable=False,
        ),
        sa.Column("csw", sa.String(), nullable=False),
        sa.Column("cpw", sa.String(), nullable=False),
        sa.Column("fcc", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "branches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("branch", sa.String(), nullable=False),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_behaviors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("behavior", sa.String(), nullable=False),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "daytime_contacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("contact_information", sa.String(), nullable=False),
        sa.Column("dismissal_time", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "familial_concerns",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("concern", sa.String(), nullable=False),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "goals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("SHORT_TERM", "LONG_TERM", name="goals_type"),
            nullable=False,
        ),
        sa.Column("goal", sa.String(), nullable=False),
        sa.Column("start_date", sa.String(), nullable=True),
        sa.Column("end_date", sa.String(), nullable=True),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transportation_methods",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transportation_method", sa.String(), nullable=False),
        sa.Column(
            "is_default", sa.Boolean(), server_default=sa.text("False"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("auth_id", sa.String(), nullable=False),
        sa.Column("role", sa.Enum("User", "Admin", name="users_role"), nullable=True),
        sa.Column("branch", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "visit_locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attendance_records",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("attendance_sheet_id", sa.Integer(), nullable=False),
        sa.Column("visitDate", sa.String(), nullable=False),
        sa.Column("visitDay", sa.String(), nullable=False),
        sa.Column(
            "visitSupervision",
            sa.Enum("FULL", "PARTIAL", "UNSUPERVISED", name="supervision"),
            nullable=False,
        ),
        sa.Column("startTime", sa.String(), nullable=False),
        sa.Column("endTime", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("staff_transport_time_min", sa.Integer(), nullable=True),
        sa.Column("driver_transport_time_min", sa.Integer(), nullable=True),
        sa.Column("foster_parent_transport_time_min", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("child_family_support_worker_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attendance_sheet_id"],
            ["attendance_sheets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["child_family_support_worker_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "intakes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "intake_status",
            sa.Enum("SUBMITTED", "PENDING", "ACTIVE", "ARCHIVED", name="intake_status"),
            nullable=True,
        ),
        sa.Column("referring_worker_name", sa.String(), nullable=False),
        sa.Column("referring_worker_contact", sa.String(), nullable=False),
        sa.Column("referral_date", sa.String(), nullable=False),
        sa.Column("family_name", sa.String(), nullable=False),
        sa.Column("cpin_number", sa.String(), nullable=False),
        sa.Column(
            "cpin_file_type",
            sa.Enum("INVESTIGATION", "ONGOING", name="cpin_file_type"),
            nullable=False,
        ),
        sa.Column(
            "court_status",
            sa.Enum(
                "INTERIM_CARE",
                "FINAL_ORDER_FOR_SOCIETY_CARE",
                "EXTENDED_SOCIETY_CARE",
                "SUPERVISION_ORDER",
                "KIN_SERVICE_PLACEMENT",
                "LIVING_WITH_BIO_FAMILY",
                "OTHER",
                name="intakes_court_status",
            ),
            nullable=False,
        ),
        sa.Column("court_order_file", sa.String(), nullable=False),
        sa.Column(
            "first_nation_heritage",
            sa.Enum(
                "FIRST_NATION_REGISTERED",
                "ELIGIBLE_FOR_REGISTRATION",
                "INUIT",
                "METIS",
                "UNKNOWN",
                name="intakes_first_nation_heritage",
            ),
            nullable=True,
        ),
        sa.Column("first_nation_band", sa.String(), nullable=True),
        sa.Column("transportation_requirements", sa.String(), nullable=False),
        sa.Column("scheduling_requirements", sa.String(), nullable=False),
        sa.Column("suggested_start_date", sa.String(), nullable=False),
        sa.Column("date_accepted", sa.String(), nullable=True),
        sa.Column("access_location", sa.String(), nullable=True),
        sa.Column("lead_access_worker_id", sa.Integer(), nullable=True),
        sa.Column("denial_reason", sa.String(), nullable=True),
        sa.Column("lead_access_worker_name", sa.String(), nullable=True),
        sa.Column("intake_meeting_notes", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lead_access_worker_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "caregivers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("date_of_birth", sa.String(), nullable=False),
        sa.Column("individual_considerations", sa.String(), nullable=True),
        sa.Column("primary_phone_number", sa.String(), nullable=False),
        sa.Column("secondary_phone_number", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column(
            "relationship_to_child",
            sa.Enum(
                "FOSTER_CAREGIVER",
                "KINSHIP_CAREGIVER",
                "BIOLOGICAL_FAMILY",
                name="caregivers_relationship_to_child",
            ),
            nullable=False,
        ),
        sa.Column("additional_contact_notes", sa.String(), nullable=True),
        sa.Column("intake_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["intake_id"], ["intakes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "children",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("intake_id", sa.Integer(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("date_of_birth", sa.String(), nullable=True),
        sa.Column("cpin_number", sa.String(), nullable=True),
        sa.Column("service_worker", sa.String(), nullable=False),
        sa.Column("daytime_contact_id", sa.Integer(), nullable=False),
        sa.Column("special_needs", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["daytime_contact_id"],
            ["daytime_contacts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["intake_id"],
            ["intakes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "intakes_concerns",
        sa.Column("intake_id", sa.Integer(), nullable=True),
        sa.Column("concern_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["concern_id"],
            ["familial_concerns.id"],
        ),
        sa.ForeignKeyConstraint(["intake_id"], ["intakes.id"], ondelete="CASCADE"),
    )
    op.create_table(
        "intakes_goals",
        sa.Column("intake_id", sa.Integer(), nullable=True),
        sa.Column("goal_id", sa.Integer(), nullable=True),
        sa.Column("start_date", sa.String(), nullable=True),
        sa.Column("end_date", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["goal_id"],
            ["goals.id"],
        ),
        sa.ForeignKeyConstraint(["intake_id"], ["intakes.id"], ondelete="CASCADE"),
    )
    op.create_table(
        "other_permitted_individuals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("relationship_to_child", sa.String(), nullable=False),
        sa.Column("notes", sa.String(), nullable=False),
        sa.Column("intake_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["intake_id"], ["intakes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "children_child_behaviors",
        sa.Column("child_id", sa.Integer(), nullable=True),
        sa.Column("child_behavior_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["child_behavior_id"],
            ["child_behaviors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["child_id"],
            ["children.id"],
        ),
    )
    op.create_table(
        "providers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("file_number", sa.String(), nullable=False),
        sa.Column("primary_phone_number", sa.String(), nullable=False),
        sa.Column("secondary_phone_number", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("relationship_to_child", sa.String(), nullable=False),
        sa.Column("additional_contact_notes", sa.String(), nullable=True),
        sa.Column("child_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"],
            ["children.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "visit_cadences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "date",
            sa.Enum(
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
                name="visit_cadence_date",
            ),
            nullable=False,
        ),
        sa.Column("time", sa.String(), nullable=False),
        sa.Column(
            "frequency",
            sa.Enum("Weekly", "Biweekly", "Monthly", name="visit_cadence_frequency"),
            nullable=False,
        ),
        sa.Column(
            "family_member",
            sa.Enum("Dad", "Mom", "Grandma", name="visit_cadence_family_member"),
            nullable=False,
        ),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("intake_id", sa.Integer(), nullable=False),
        sa.Column("child_id", sa.Integer(), nullable=True),
        sa.Column("caregiver_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["caregiver_id"], ["caregivers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["child_id"], ["children.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["intake_id"], ["intakes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("visit_cadences")
    op.drop_table("providers")
    op.drop_table("children_child_behaviors")
    op.drop_table("other_permitted_individuals")
    op.drop_table("intakes_goals")
    op.drop_table("intakes_concerns")
    op.drop_table("children")
    op.drop_table("caregivers")
    op.drop_table("intakes")
    op.drop_table("attendance_records")
    op.drop_table("visit_locations")
    op.drop_table("users")
    op.drop_table("transportation_methods")
    op.drop_table("goals")
    op.drop_table("familial_concerns")
    op.drop_table("daytime_contacts")
    op.drop_table("child_behaviors")
    op.drop_table("branches")
    op.drop_table("attendance_sheets")
    op.drop_table("access_types")
    # ### end Alembic commands ###
